% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sirs.R
\name{sirs}
\alias{sirs}
\title{SIRS algorithm to get a sparse coefficient beta in sparse recovery problem.}
\usage{
sirs(
  A,
  y,
  a = 0.1,
  delta = 1e-06,
  x0 = c(rep(1, p)),
  maxsize = min(ceiling(n/2), p),
  eps = 1/p,
  thresh = 1e-06,
  maxiter = 50,
  maxseq = 50,
  tol = 1e-06
)
}
\arguments{
\item{A}{n x p design matrix with sample size n and dimensionality p}

\item{y}{n-vector of response}

\item{a}{shape parameter of SICA penalty controling its maximum concavity. Default = 0.1}

\item{delta}{a small ridge parameter for stabilizing matrix inverse. Default = 1e-6}

\item{x0}{the initial value. Default = rep(1,p)}

\item{maxsize}{maximum size of the sparse model. Default = min(ceiling(n/2), p)}

\item{eps}{scalar between 0 and 1, downweighting undesirable predictors. Default = 1/p}

\item{thresh}{threshold of the circulation. Default = 1e-6}

\item{maxiter}{maximum number of iterations. Default = 50}

\item{maxseq}{maximum number of sequential steps. Default = min(maxiter, maxsize)}

\item{tol}{tolerance for updating.  Default = 1e-6}
}
\value{
a coeffcient value in sparse recovery problem.
}
\description{
Core pragram of the sequentially and iteratively reweighted squares(SIRS) algorithm (Lv and Fan, 2009), 
which solves the problem of sparse recovery using an adaptively reweighted L_2-regularization method.
}
\examples{
\dontrun{
library(MASS)
n = 100
p = 50
rho = 0.5
mu = c(rep(0,p))
beta = c(0.5,-0.5,1,-1.2,-1,rep(0,p-5))
sigma1 <- matrix(0, p, p)
sigma1 <- rho ^ (abs(row(sigma1) - col(sigma1)))
A = mvrnorm(n,mu,sigma1)
y = A\%*\%beta
a = 0.4
res = sirs(A,y,a)
}
}
